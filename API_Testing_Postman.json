{
	"info": {
		"_postman_id": "c648f7ed-f82e-4e5b-b7d9-345accf076c0",
		"name": "AutoTest",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Assert the call responds with a successful status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Validate 10 records are returned\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.length).to.equal(10);",
							"});",
							"",
							"var Ajv = require('ajv'),",
							"    ajv = new Ajv({ logger: console, allErrors: true }),",
							"    schema_user = {",
							"   \"type\":\"object\",",
							"   \"required\":[",
							"      \"id\",",
							"      \"name\",",
							"      \"username\",",
							"      \"email\",",
							"      \"address\",",
							"      \"phone\",",
							"      \"website\",",
							"      \"company\"",
							"   ],",
							"   \"properties\":{",
							"      \"id\":{",
							"         \"type\":\"number\"",
							"      },",
							"      \"name\":{",
							"         \"type\":\"string\"",
							"      },",
							"      \"username\":{",
							"         \"type\":\"string\"",
							"      },",
							"      \"email\":{",
							"         \"type\":\"string\"",
							"      },",
							"      \"address\":{",
							"            \"type\":\"object\",",
							"            \"required\":[",
							"                \"street\",",
							"                \"suite\",",
							"                \"city\",",
							"                \"zipcode\",",
							"                \"geo\"",
							"            ],",
							"            \"properties\":{",
							"                \"street\":{",
							"                \"type\":\"string\"",
							"                },",
							"                \"suite\":{",
							"                \"type\":\"string\"",
							"                },",
							"                \"city\":{",
							"                \"type\":\"string\"",
							"                },",
							"                \"zipcode\":{",
							"                \"type\":\"string\"",
							"                },",
							"                \"geo\":{",
							"                \"type\":\"object\"",
							"                }",
							"            }",
							"      },",
							"      \"phone\":{",
							"         \"type\":\"string\"",
							"      },",
							"      \"website\":{",
							"         \"type\":\"string\"",
							"      },",
							"      \"company\":{",
							"            \"type\":\"object\",",
							"            \"required\":[",
							"                \"name\",",
							"                \"catchPhrase\",",
							"                \"bs\"",
							"            ],",
							"            \"properties\":{",
							"                \"name\":{",
							"                \"type\":\"string\"",
							"                },",
							"                \"catchPhrase\":{",
							"                \"type\":\"string\"",
							"                },",
							"                \"bs\":{",
							"                \"type\":\"string\"",
							"                }",
							"            }",
							"      }",
							"    }",
							"   };",
							"",
							"",
							"pm.test(\"Validate you can retrieve data for a single user\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(element => {",
							"        pm.expect(ajv.validate(schema_user, element), JSON.stringify(ajv.errors)).to.be.true;",
							"    });",
							"});",
							"",
							"pm.test(\"Validate you can retrieve data for a single user\", function () {",
							"    var jsonData = pm.response.json();",
							"    var findUserName = 'Mrs. Dennis Schulist';",
							"    var hasUserName = false;",
							"    for (var user of jsonData){",
							"        if (user.name.localeCompare(findUserName) == 0){",
							"            hasUserName = true;",
							"            break;",
							"        }",
							"    }",
							"    pm.expect(hasUserName).to.be.true;",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/users",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		}
	]
}